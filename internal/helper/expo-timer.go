package helper

import "time"

type ExpoTimer interface {
	Sleep()
}

type expoTimerImpl struct {
	timer int
	cap  int
}

func NewExpoTimer(cap int) ExpoTimer {
	return &expoTimerImpl{
		timer: 0,
		cap: cap,
	}
}

func (e *expoTimerImpl) Sleep() {
	if e.timer == 0 {
		e.timer = 1
	} else if e.timer < e.cap {
		e.timer *= 2
	} else {
		e.timer = e.cap
	}
	time.Sleep(time.Duration(e.timer) * time.Second)
}