package helper

import (
	"os"
	"os/signal"
)

type OSSignal interface {
	Notify(signals ...os.Signal)
	Channel() chan os.Signal
}

type osSignalImpl struct {
	signal chan os.Signal
}

func NewOSSignal() OSSignal {
	return &osSignalImpl{
		signal: make(chan os.Signal),
	}
}

func (s *osSignalImpl) Notify(signals ...os.Signal) {
	signal.Notify(s.signal, signals...)
}

func (s *osSignalImpl) Channel() chan os.Signal {
	return s.signal
}
