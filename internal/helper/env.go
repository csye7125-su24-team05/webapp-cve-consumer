package helper

import (
	"log"
	"os"
	"strconv"
)

func GetEnv(key string) string {
	value, exists := os.LookupEnv(key)
	if !exists {
		log.Fatalf("environment variable %s is not set", key)
		os.Exit(1)
	}
	return value
}

func GetEnvInt(key string) int {
	value, exists := os.LookupEnv(key)
	if !exists {
		log.Fatalf("environment variable %s is not set", key)
		os.Exit(1)
	}

	intVal, err := strconv.Atoi(value)
	if err != nil {
		log.Fatalf("error converting %s to int: %v", key, err.Error())
		os.Exit(1)
	}
	return intVal
}

func GetEnvWithDefault(key, defaultValue string) string {
	value, exists := os.LookupEnv(key)
	if !exists {
		log.Printf("environment variable %s is not set, using default value: %s", key, defaultValue)
		return defaultValue
	}
	return value
}

func GetEnvIntWithDefault(key string, defaultValue int) int {
	value, exists := os.LookupEnv(key)
	if !exists {
		log.Printf("environment variable %s is not set, using default value: %d", key, defaultValue)
		return defaultValue
	}

	intVal, err := strconv.Atoi(value)
	if err != nil {
		log.Printf("error converting %s to int: %v, using default value: %d", key, err.Error(), defaultValue)
		return defaultValue
	}
	return intVal
}
